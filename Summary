
Overview

In this assignment we'll develop client server programs. The server program will act as a key-value store. It will support put, get, and delete operations. The server will be single threaded. As a result it will be able to serve at most one client at a time. Two versions of server and client will be developed such that one pair of them will communicate using TCP as L-4 protocol whereas the other pair will use UDP. A set of messages will be defined to support key value store, retrieve, and removal operations. Client will send request messages and server will respond with success or failure status to client. Message format will remain identical for both TCP and UDP based client-server pairs. After sending a request to server, client will wait for a certain period. After that client will retry sending the same message to server again. A well defined message format will enable server and client to detect malformed messages and report that accordingly. Both client and server will log human readable (i.e. plain text details) of their conversation with time-stamps. These programs will be configurable through command line arguments, for example, while running client program, user will be able to provide server IP address and port. Client program is transient, i.e., it runs as long as user wants to use it. On the other hand, server will run forever until it is stopped intentionally by user. This  assignment doesn't require the server to store key-value pairs to to disk files for persistence. As a result all stored key-value pairs will be lost if server is killed. To deal with this shortcoming, the requirement includes pre-population of key-value pairs at the start of client program. Overall this assignment will provide us a solid understanding of the most basic form of inter computer communication accomplished by using sockets.
